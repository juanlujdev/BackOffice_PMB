[{"C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\index.js":"1","C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\reportWebVitals.js":"2","C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\App.js":"3","C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\ReportView.js":"4","C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\BetsView.js":"5","C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\EventsView.js":"6","C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\UsersView.js":"7"},{"size":611,"mtime":1609772988623,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2194,"mtime":1610612571542,"results":"11","hashOfConfig":"9"},{"size":4316,"mtime":1610566209465,"results":"12","hashOfConfig":"9"},{"size":8158,"mtime":1610612571528,"results":"13","hashOfConfig":"9"},{"size":10375,"mtime":1610566182790,"results":"14","hashOfConfig":"9"},{"size":10946,"mtime":1610612571514,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1hpabym",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\index.js",[],["34","35"],"C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\reportWebVitals.js",[],"C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\App.js",[],"C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\ReportView.js",[],["36","37"],"C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\BetsView.js",["38"],"import * as React from \"react\";\r\nimport {Fragment} from \"react\";\r\n\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Button} from \"primereact/button\";\r\nimport {DataTable} from \"primereact/datatable\";\r\nimport {Column} from \"primereact/column\";\r\nimport {SplitButton} from \"primereact/splitbutton\";\r\n\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport axios from \"axios\";\r\n\r\nexport class BetsView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfoData: [],\r\n            marketInfoData: [],\r\n            stateInputEmail: false,\r\n            stateInputMercado: false,\r\n            stateInputEvento: false,\r\n            email: '',\r\n            mercado: '',\r\n            evento: '',\r\n            hideTable: false,\r\n            hideTableMarket: true,\r\n            checked: false,\r\n            hide: true,\r\n            saveInputId: '',\r\n            items: [\r\n                {\r\n                    label: 'Bloquear mercado',\r\n                    icon: 'pi pi-lock',\r\n                    command: (e) => {\r\n                        this.setState({\r\n                            hide: !this.state.hide,\r\n                            hideTable: !this.state.hideTable,\r\n                            hideTableMarket: !this.state.hideTableMarket\r\n                        });\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className={'fiter'}>\r\n                    <InputText style={{width: '20%'}} onChange={this.getByEmail} disabled={this.state.stateInputEmail}\r\n                               placeholder=\"Email\"/>\r\n                    <InputText style={{width: '20%'}} type={\"number\"} onChange={this.getByMercado}\r\n                               disabled={this.state.stateInputMercado}\r\n                               placeholder=\"Mercado\"/>\r\n                    <InputText style={{width: '20%'}} type={\"number\"} onChange={this.getByEvento}\r\n                               disabled={this.state.stateInputEvento}\r\n                               placeholder=\"Evento\"/>\r\n                    <Button style={{width: '20%'}} onClick={this.viewFilterBets} label=\"Buscar\" icon=\"pi pi-check\"/>\r\n                    <SplitButton style={{width: '18%'}} label=\"Filtrar\" model={this.state.items} icon=\"pi pi-filter\"/>\r\n                </div>\r\n                <div style={{paddingTop:10}} hidden={this.state.hide}>\r\n                    <InputText onChange={this.saveInput} value={this.state.saveInputId} type={\"number\"}\r\n                               placeholder={\"bloquear Id mercado\"}/>\r\n                    <Button label={\"Bloquear\"} onClick={this.blockMarket}/>\r\n                </div>\r\n                <div hidden={this.state.hideTableMarket}>\r\n                    <DataTable value={this.state.marketInfoData}>\r\n                        <Column field=\"MercadoId\" header=\"MercadoId\"></Column>\r\n                        <Column field=\"Bloqueado\" header=\"Bloqueado\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n                <div hidden={this.state.hideTable}>\r\n                    <DataTable value={this.state.userInfoData}>\r\n                        <Column style={{width: '6%'}} field=\"ApuestaId\" header=\"Apuesta\"></Column>\r\n                        <Column style={{width: '7%'}} field=\"MercadoOverUnder\" header=\"Mercado\"></Column>\r\n                        <Column style={{width: '5%'}} field=\"TipoOverUnder\" header=\"Tipo\"></Column>\r\n                        <Column style={{width: '5%'}} field=\"Cuota\" header=\"Cuota\"></Column>\r\n                        <Column style={{width: '5%'}} field=\"DineroApostado\" header=\"Dinero\"></Column>\r\n                        <Column style={{width: '18%'}} field=\"fecha\" header=\"Fecha\"></Column>\r\n                        <Column style={{width: '10%'}} field=\"UsuarioId\" header=\"Usuario\"></Column>\r\n                        <Column style={{width: '7%'}} field=\"MercadoId\" header=\"Mercado\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.bets();\r\n        this.markets();\r\n    }\r\n\r\n    getByEmail = (emailInput) => {\r\n        this.setState({email: emailInput.target.value},\r\n            () => {\r\n                if (this.state.email.length > 0) {\r\n                    this.setState({stateInputMercado: true, stateInputEvento: true});\r\n                } else {\r\n                    this.setState({stateInputMercado: false, stateInputEvento: false});\r\n                    this.bets();\r\n                }\r\n            }\r\n        )\r\n    }\r\n    getByMercado = (mercadoInput) => {\r\n        this.setState({mercado: mercadoInput.target.value},\r\n            () => {\r\n                if (this.state.mercado.length > 0) {\r\n                    this.setState({stateInputEmail: true, stateInputEvento: true})\r\n                } else {\r\n                    this.setState({stateInputEmail: false, stateInputEvento: false})\r\n                    this.bets();\r\n                }\r\n            }\r\n        )\r\n    }\r\n    getByEvento = (eventoInput) => {\r\n        this.setState({evento: eventoInput.target.value},\r\n            () => {\r\n                if (this.state.evento.length > 0) {\r\n                    this.setState({stateInputEmail: true, stateInputMercado: true});\r\n                } else {\r\n                    this.setState({stateInputEmail: false, stateInputMercado: false});\r\n                    this.bets();\r\n                }\r\n            }\r\n        )\r\n    }\r\n    saveInput = (eventInput) => {\r\n        this.setState({saveInputId: eventInput.target.value});\r\n    }\r\n    viewFilterBets = () => {\r\n        if (this.state.email !== '') {\r\n            axios.get('https://localhost:44301/api/apuestas?email=' + this.state.email).then((resultRequest) => {\r\n                if (resultRequest.data.length > 0) {\r\n                    this.setState({userInfoData: resultRequest.data});\r\n                } else {\r\n                    alert(\"No hay coincidencias por Email\");\r\n                }\r\n            })\r\n        }\r\n        if (this.state.evento !== '') {\r\n            axios.get('https://localhost:44301/api/apuestas?evento=' + this.state.evento).then((resultRequest) => {\r\n                if (resultRequest.data.length > 0) {\r\n                    this.setState({userInfoData: resultRequest.data});\r\n                } else {\r\n                    alert(\"No hay coincidencia por evento\");\r\n                }\r\n            })\r\n        }\r\n        if (this.state.mercado) {\r\n            axios.get('https://localhost:44301/api/apuestas?mercado=' + this.state.mercado).then((resultRequest) => {\r\n                if (resultRequest.data.length > 0) {\r\n                    this.setState({userInfoData: resultRequest.data});\r\n                } else {\r\n                    alert(\"No hay coincidencia por mercado\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    bets = () => {\r\n        axios.get('https://localhost:44301/api/apuestas').then((resultRequest) => {\r\n            this.setState({userInfoData: resultRequest.data});\r\n        })\r\n    };\r\n\r\n    markets = () => {\r\n        axios.get('https://localhost:44301/api/mercados').then((resultRequest) => {\r\n            resultRequest.data.map((item) => {\r\n                if (item.Bloqueado === true) {\r\n                    item.Bloqueado = 'si';\r\n                } else {\r\n                    item.Bloqueado = 'no';\r\n                }\r\n            })\r\n            this.setState({marketInfoData: resultRequest.data});\r\n        })\r\n    };\r\n    blockMarket = () => {\r\n\r\n        axios.put('https://localhost:44301/api/mercados?id=' + this.state.saveInputId).then((resultRequest) => {\r\n            alert(\"El mercado con Id \"+this.state.saveInputId+\" esta bloqueado\");\r\n            this.setState({hideTableMarket: resultRequest.data, saveInputId: ''});\r\n            this.markets();\r\n\r\n        }).catch(function (error){\r\n            alert(\"Error\"+error.message.toString());\r\n        })\r\n    };\r\n}\r\n","C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\EventsView.js",[],"C:\\Users\\juani\\2_DAM\\PMDM\\Ejer_evaluables\\pmb-backoffice\\src\\UsersView.js",["39"],"import * as React from \"react\";\r\nimport {Fragment} from \"react\";\r\n\r\nimport {SplitButton} from 'primereact/splitbutton';\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Button} from \"primereact/button\";\r\nimport {DataTable} from \"primereact/datatable\";\r\nimport {Column} from \"primereact/column\";\r\n\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport axios from \"axios\";\r\n\r\nexport class UsersView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfoData: [],\r\n            name: '',\r\n            surname: '',\r\n            email: '',\r\n            stateInputName: false,\r\n            stateInputSurname: false,\r\n            stateInputEmail: false,\r\n            hide: true,\r\n            deleteEmail: '',\r\n            hide2: true,\r\n            checked1: false,\r\n            checked2: false,\r\n            changeEmail: '',\r\n            changeOldPsswrd: '',\r\n            changeNewPsswrd: '',\r\n            changeNewPsswrd2: '',\r\n            changeByNewPsswrd2: '',\r\n            items: [\r\n                {\r\n                    label: 'Eliminar usuario',\r\n                    icon: 'pi pi-trash',\r\n                    command: (e) => {\r\n                        this.setState({hide: !this.state.hide, hide2: true});\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Restablecer clave',\r\n                    icon: 'pi pi-user-edit',\r\n                    command: (e) => {\r\n                        this.setState({hide2: !this.state.hide2, hide: true});\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className={'fiter'}>\r\n                    <InputText style={{width: '15%'}} onChange={this.getByName} disabled={this.state.stateInputName}\r\n                               placeholder=\"Nombre\"/>\r\n                    <InputText style={{width: '25%'}} onChange={this.getBySurname}\r\n                               disabled={this.state.stateInputSurname}\r\n                               placeholder=\"Apellidos\"/>\r\n                    <InputText onChange={this.getByEmail} disabled={this.state.stateInputEmail} placeholder=\"Email\"/>\r\n                    <Button onClick={this.viewFilterUser} label=\"Buscar\" icon=\"pi pi-check\"/>\r\n                    <SplitButton style={{width: '15%'}} label=\"Filtrar\" model={this.state.items} icon=\"pi pi-filter\"/>\r\n                </div>\r\n                <div style={{paddingTop:10}} hidden={this.state.hide}>\r\n                    <InputText onChange={this.getByEmailDelete} value={this.state.deleteEmail} placeholder=\"Email\"/>\r\n                    <Button style={{backgroundColor: \"#f06e4e\"}} onClick={this.deleteUser} label=\"Eliminar\"/>\r\n                </div>\r\n                <div style={{paddingTop:10}} hidden={this.state.hide2}>\r\n                    <InputText style={{width: '20%'}} value={this.state.changeEmail} onChange={this.changeById} placeholder=\"Email\"/>\r\n                    <InputText style={{width: '20%'}} value={this.state.changeOldPsswrd} onChange={this.changeByOldPsswrd}\r\n                               placeholder=\"Password antiguo\"/>\r\n                    <InputText style={{width: '20%'}} value={this.state.changeNewPsswrd} onChange={this.changeByNewPsswrd}\r\n                               placeholder=\"Nuevo password\"/>\r\n                    <InputText  style={{width: '20%'}} value={this.state.changeNewPsswrd2} onChange={this.changeByNewPsswrd2}\r\n                               placeholder=\"Confirmar password\"/>\r\n                    <Button style={{width: '15%'}} style={{backgroundColor: \"#dcd367\"}} onClick={this.changePasswrd} label=\"Cambiar\"/>\r\n                </div>\r\n                <div>\r\n                    <DataTable value={this.state.userInfoData}>\r\n                        <Column field=\"UsuarioId\" header=\"EmailId\"></Column>\r\n                        <Column field=\"Nombre\" header=\"Nombre\"></Column>\r\n                        <Column field=\"Apellido\" header=\"Apellidos\"></Column>\r\n                        <Column field=\"edad\" header=\"Edad\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfoUser();\r\n    }\r\n\r\n    getInfoUser = () => {\r\n        axios.get('https://localhost:44301/api/usuarios').then((resultRequest) => {\r\n            this.setState({userInfoData: resultRequest.data});\r\n        })\r\n    }\r\n    viewFilterUser = () => {\r\n        if (this.state.name !== '') {\r\n            axios.get('https://localhost:44301/api/usuarios?name=' + this.state.name).then((resultRequest) => {\r\n                if (resultRequest.data.length > 0) {\r\n                    this.setState({userInfoData: resultRequest.data});\r\n                } else {\r\n                    alert(\"Usuario no encontrado\");\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                alert(\"Error\" + error.message.toString());\r\n            });\r\n        }\r\n        if (this.state.surname !== '') {\r\n            axios.get('https://localhost:44301/api/usuarios?surname=' + this.state.surname).then((resultRequest) => {\r\n                if (resultRequest.data.length > 0) {\r\n                    this.setState({userInfoData: resultRequest.data});\r\n                } else {\r\n                    alert(\"Apellido no encontrado\");\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                alert(\"Error\" + error.message.toString());\r\n            });\r\n        }\r\n        if (this.state.email !== '') {\r\n            console.log('El mail es: ' + this.state.email)\r\n            axios.get('https://localhost:44301/api/usuarios?email=' + this.state.email).then((resultRequest) => {\r\n                if (resultRequest.data.length > 0) {\r\n                    this.setState({userInfoData: resultRequest.data});\r\n                } else {\r\n                    alert(\"Email no encontrado\");\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                alert(\"Error\" + error.message.toString());\r\n            });\r\n        }\r\n    }\r\n    changePasswrd = () => {\r\n        axios.post('https://localhost:44301/api/Account/ChangePasswordApi?email=' + this.state.changeEmail,\r\n            {\r\n                OldPassword: this.state.changeOldPsswrd,\r\n                NewPassword: this.state.changeNewPsswrd,\r\n                ConfirmPassword: this.state.changeNewPsswrd2\r\n            }\r\n        ).then();\r\n        alert(\"Password changed\");\r\n        this.setState({changeEmail: '', changeOldPsswrd: '', changeNewPsswrd: '', changeNewPsswrd2: ''});\r\n    }\r\n    getByName = (eventInput) => {\r\n        this.setState({name: eventInput.target.value},\r\n            () => {\r\n                if (this.state.name.length > 0) {\r\n                    this.setState({stateInputEmail: true, stateInputSurname: true});\r\n                } else {\r\n                    this.setState({stateInputEmail: false, stateInputSurname: false});\r\n                    this.getInfoUser();\r\n                }\r\n            })\r\n    }\r\n    getByEmail = (eventInput) => {\r\n        this.setState({email: eventInput.target.value},\r\n            () => {\r\n                if (this.state.email.length > 0) {\r\n                    this.setState({stateInputName: true, stateInputSurname: true});\r\n                } else {\r\n                    this.setState({stateInputName: false, stateInputSurname: false});\r\n                    this.getInfoUser();\r\n                }\r\n            })\r\n    }\r\n    getBySurname = (eventInput) => {\r\n        this.setState({surname: eventInput.target.value},\r\n            () => {\r\n                if (this.state.surname.length > 0) {\r\n                    this.setState({stateInputEmail: true, stateInputName: true});\r\n                } else {\r\n                    this.setState({stateInputEmail: false, stateInputName: false});\r\n                    this.getInfoUser();\r\n                }\r\n            })\r\n    }\r\n    getByEmailDelete = (eventInput) => {\r\n        this.setState({deleteEmail: eventInput.target.value});\r\n    }\r\n    changeById = (eventInput) => {\r\n        this.setState({changeEmail: eventInput.target.value});\r\n    }\r\n    changeByOldPsswrd = (eventInput) => {\r\n        this.setState({changeOldPsswrd: eventInput.target.value});\r\n    }\r\n    changeByNewPsswrd = (eventInput) => {\r\n        this.setState({changeNewPsswrd: eventInput.target.value});\r\n    }\r\n    changeByNewPsswrd2 = (eventInput) => {\r\n        this.setState({changeNewPsswrd2: eventInput.target.value})\r\n    }\r\n    deleteUser = () => {\r\n        axios.delete('https://localhost:44301/api/usuarios?usuarioId=' + this.state.deleteEmail).then((resultRequest) => {\r\n            if (resultRequest.data === 'fail') {\r\n                alert(\"Email no encontrado\");\r\n            } else {\r\n                this.setState({deleteEmail: ''});\r\n                this.setState({userInfoData: resultRequest.data},\r\n                    () => {\r\n                        this.getInfoUser();\r\n                    });\r\n                alert(\"Email eliminado\");\r\n            }\r\n        }).catch(function (error) {\r\n            alert(\"Error\" + error.message.toString());\r\n        });\r\n    }\r\n    //Revisar condigo porque no cambia los estados de los botones cuando los cambio\r\n    showDelete = () => {\r\n        this.setState({checked1: !this.state.checked1},\r\n            () => {\r\n                if (this.state.checked1 === true) {\r\n                    this.setState({hide: false, hide2: true})\r\n                    if (this.state.checked2 === true) {\r\n                        this.setState({checked2: false})\r\n                    }\r\n                }\r\n                //si no lo pongo no mq quita la visualizacion de eliminar cuando lo descklico\r\n                if (this.state.checked1 === false) {\r\n                    this.setState({hide: true})\r\n                }\r\n                if (this.state.checked2 === true) {\r\n                    this.setState({hide: true, hide2: false});\r\n                    if (this.state.checked1 === true) {\r\n                        this.setState({checked1: false});\r\n                    }\r\n                    if (this.state.checked2 === false) {\r\n                        this.setState({hide2: true});\r\n                    }\r\n                }\r\n\r\n            })\r\n    }\r\n    showChange = () => {\r\n        this.setState({checked2: !this.state.checked2},\r\n            () => {\r\n                if (this.state.checked2 === true) {\r\n                    this.setState({hide2: false, hide: true})\r\n                } else {\r\n                    this.setState({hide2: true, hide: true})\r\n                }\r\n            })\r\n    }\r\n}\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":175,"column":43,"nodeType":"48","messageId":"49","endLine":175,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":82,"column":52,"nodeType":"52","endLine":82,"endColumn":88},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]